{"version":3,"sources":["../../src/domain/entities/menuItem.ts","../../src/domain/entities/content.ts","../../src/domain/usecases/menu/registerMenu.ts","../../src/infrastructure/menuRepositoryImpl.ts","../../src/infrastructure/contentRepositoryImpl.ts","../../src/ui/coreAppShell/coreAppShell.tsx","../../src/ui/coreAppShell/useCoreAppShellData.tsx","App.tsx","index.tsx"],"names":["MenuItem","id","label","action","Content","component","RegisterMenu","_menuRepository","invoke","this","register","MenuRepositoryImpl","items","some","m","menuItem","ContentRepositoryImpl","sections","activate","active","section","s","CoreAppShell","menuRepository","contentRepository","menuItems","useMemo","activeSection","useCoreAppShellData","className","React","key","item","onClick","TestContent","App","getInstance","content","ReactDOM","render","document","getElementById"],"mappings":"yLAAaA,EACX,gBACS,KAAAC,KACA,KAAAC,QACA,KAAAC,UCJEC,EACX,cACS,KAAAH,KACA,KAAAI,aCIEC,EAAb,WAEE,cAAoB,KAAAC,kBAFtB,0BAKSC,YACL,OAAOC,KAAKF,gBAAgBG,SAA5B,IANJ,KCLaC,EAAb,WAIE,aAFO,KAAAC,MAAA,GAFT,qBAMS,WAKL,OAJKD,EAAL,WACEA,WAA8B,IAA9BA,GAGKA,EAAP,UAXJ,qBAcED,YACMD,KAAKG,MAAMC,MAAK,SAAAC,GAAC,OAAIA,OAASC,EAAb,QACrBN,KAAKG,MAAQ,GAAb,OAAiBH,KAAjB,aAhBJ,KCAaO,EAAb,WAKE,aAFO,KAAAC,SAAA,GAHT,cAOS,WAKL,OAJKD,EAAL,WACEA,WAAiC,IAAjCA,GAGKA,EAAP,UAZJ,oCAeEE,YACET,KAAKU,OAASC,GAhBlB,WAmBEV,YACMD,KAAKQ,SAASJ,MAAK,SAAAQ,GAAC,OAAIA,OAASD,EAAb,QACxBX,KAAKQ,SAAW,GAAhB,OAAoBR,KAApB,gBArBJ,KCEaa,EAAe,WAC1B,MCDiC,WACjC,IAAMC,EAAiCZ,EAAvC,cACMa,EAAuCR,EAA7C,cAKA,MAAO,CAAES,UAHSC,mBAAQ,kBAAMH,EAAN,QAA4B,CAACA,EAAvD,QAGoBI,cAFED,mBAAQ,kBAAMF,EAAN,SAAgC,CAACA,EAA/D,UDJqCI,GAA7BH,EAAR,YAAmBE,EAAnB,gBAEA,OACE,yBAAKE,UAAU,aACbC,6BACE,4BACGL,EAAA,KAAc,mBAAoB,wBAAIM,IAAKC,EAAK/B,GAAIgC,QAASD,EAAK7B,QAAS6B,EAA7D,YAGnBF,8BACEA,iCAAUH,EARhB,cEJIO,EAAc,kBAAM,4CAaXC,EAXH,WACW,IAAI7B,EAAaK,EAAmByB,eAC5C5B,OAAO,IAAIR,EAAS,QAAS,cAC1C,IAAMwB,EAAoBR,EAAsBoB,cAC1CC,EAAU,IAAIjC,EAAQ,WAAY8B,GAIxC,OAHAV,EAAkBd,SAAS2B,GAC3Bb,EAAkBN,SAASmB,GAEpB,kBAAC,EAAD,OCPTC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.59c9e369.chunk.js","sourcesContent":["export class MenuItem {\n  constructor(\n    public id: string,\n    public label: string,\n    public action?: (...args: any[]) => undefined,\n  ) {}\n}\n","export class Content {\n  constructor(\n    public id: string,\n    public component: any,\n  ) {}\n}\n","import { MenuItem } from '../../entities';\nimport { MenuRepository } from '../../repositories';\n\nexport interface RegisterMenuUseCase {\n  invoke: MenuRepository['register'];\n}\n\nexport class RegisterMenu implements RegisterMenuUseCase {\n\n  constructor(private _menuRepository: MenuRepository) {\n  }\n\n  public invoke(item: MenuItem): void {\n    return this._menuRepository.register(item);\n  }\n}\n","import { MenuRepository, MenuItem } from '../domain';\n\nexport class MenuRepositoryImpl implements MenuRepository {\n  private static instance: MenuRepositoryImpl;\n  public items: MenuItem[] = [];\n\n  private constructor() {}\n\n  public static getInstance(): MenuRepositoryImpl {\n    if (!MenuRepositoryImpl.instance) {\n      MenuRepositoryImpl.instance = new MenuRepositoryImpl();\n    }\n\n    return MenuRepositoryImpl.instance;\n  }\n\n  register(menuItem: MenuItem): void {\n    if (this.items.some(m => m.id === menuItem.id)) return;\n    this.items = [...this.items, menuItem];\n  }\n}\n","import { ContentRepository, Content } from '../domain';\n\nexport class ContentRepositoryImpl implements ContentRepository {\n  private static instance: ContentRepositoryImpl;\n  public active: Content;\n  public sections: Content[] = [];\n\n  private constructor() {}\n\n  public static getInstance(): ContentRepositoryImpl {\n    if (!ContentRepositoryImpl.instance) {\n      ContentRepositoryImpl.instance = new ContentRepositoryImpl();\n    }\n\n    return ContentRepositoryImpl.instance;\n  }\n\n  activate(section: Content): void {\n    this.active = section;\n  }\n\n  register(section: Content): void {\n    if (this.sections.some(s => s.id === section.id)) return;\n    this.sections = [...this.sections, section];\n  }\n}\n","import React from 'react';\nimport { MenuItem } from '../../domain';\nimport { useCoreAppShellData } from './useCoreAppShellData';\n\nexport const CoreAppShell = () => {\n  const { menuItems, activeSection } = useCoreAppShellData();\n\n  return (\n    <div className=\"container\">\n      <nav>\n        <ul>\n          {menuItems.map((item: MenuItem) => <li key={item.id} onClick={item.action}>{item.label}</li>)}\n        </ul>\n      </nav>\n      <main>\n        <section>{activeSection.component}</section>\n      </main>\n    </div>\n  );\n};\n\n\n","import { useMemo } from 'react';\nimport { ContentRepository, MenuRepository } from '../../domain';\nimport { ContentRepositoryImpl, MenuRepositoryImpl } from '../../infrastructure';\n\nexport const useCoreAppShellData = () => {\n  const menuRepository: MenuRepository = MenuRepositoryImpl.getInstance();\n  const contentRepository: ContentRepository = ContentRepositoryImpl.getInstance();\n\n  const menuItems = useMemo(() => menuRepository.items, [menuRepository.items]);\n  const activeSection = useMemo(() => contentRepository.active, [contentRepository.active]);\n\n  return { menuItems, activeSection };\n};\n","import React from 'react'\n\nimport { CoreAppShell, MenuItem, MenuRepositoryImpl, ContentRepositoryImpl, Content, RegisterMenu } from 'poc-core-system'\nconst TestContent = () => <p>TEST CONTENT</p>\n\nconst App = () => {\n  const registerMenu = new RegisterMenu(MenuRepositoryImpl.getInstance());\n  registerMenu.invoke(new MenuItem('menu1', 'Item test'));\n  const contentRepository = ContentRepositoryImpl.getInstance();\n  const content = new Content('section1', TestContent);\n  contentRepository.register(content);\n  contentRepository.activate(content)\n\n  return <CoreAppShell />\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}